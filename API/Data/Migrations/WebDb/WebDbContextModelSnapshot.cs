// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Data.Migrations.WebDb
{
    [DbContext(typeof(AppWebDbContext))]
    partial class WebDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Models.AppWebModels.ProductWeb.Categories.ProductCategoryFirst", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameCh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategoryFirsts");
                });

            modelBuilder.Entity("API.Models.AppWebModels.ProductWeb.Categories.ProductCategorySecond", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NameCh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductCategoryFirstId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategoryFirstId");

                    b.ToTable("ProductCategorySeconds");
                });

            modelBuilder.Entity("API.Models.AppWebModels.ProductWeb.Categories.ProductCategoryThird", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AutoGenerate")
                        .HasColumnType("bit");

                    b.Property<string>("KeyElement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyWordCN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyWordEn1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyWordEn2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyWordEn3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyWordEn4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameCh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoKeyWordEn1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoKeyWordEn2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoKeyWordEn3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoKeyWordEn4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoKeyWordEn5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrKeyWordEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrKeyWordEn1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrKeyWordEn2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrKeyWordEn3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductCategorySecondId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsGroupSecondId")
                        .HasColumnType("int");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductCategorySecondId");

                    b.ToTable("ProductCategoryThirds");
                });

            modelBuilder.Entity("API.Models.AppWebModels.ProductWeb.Categories.ProductsInCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsInCategory");
                });

            modelBuilder.Entity("API.Models.ApplicationModels.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CasNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductNameCN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StructureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDay")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("API.Models.AppWebModels.ProductWeb.Categories.ProductCategorySecond", b =>
                {
                    b.HasOne("API.Models.AppWebModels.ProductWeb.Categories.ProductCategoryFirst", "ProductCategoryFirst")
                        .WithMany("ProductsGroupSeconds")
                        .HasForeignKey("ProductCategoryFirstId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategoryFirst");
                });

            modelBuilder.Entity("API.Models.AppWebModels.ProductWeb.Categories.ProductCategoryThird", b =>
                {
                    b.HasOne("API.Models.AppWebModels.ProductWeb.Categories.ProductCategorySecond", null)
                        .WithMany("ProductsGroupThirds")
                        .HasForeignKey("ProductCategorySecondId");
                });

            modelBuilder.Entity("API.Models.AppWebModels.ProductWeb.Categories.ProductsInCategory", b =>
                {
                    b.HasOne("API.Models.ApplicationModels.Products.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("API.Models.AppWebModels.ProductWeb.Categories.ProductCategoryFirst", b =>
                {
                    b.Navigation("ProductsGroupSeconds");
                });

            modelBuilder.Entity("API.Models.AppWebModels.ProductWeb.Categories.ProductCategorySecond", b =>
                {
                    b.Navigation("ProductsGroupThirds");
                });
#pragma warning restore 612, 618
        }
    }
}
